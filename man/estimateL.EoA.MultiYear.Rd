% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateL.EoA.MultiYear.R
\name{estimateL.EoA.MultiYear}
\alias{estimateL.EoA.MultiYear}
\title{estimateL.EoA.MultiYear - Estimate multi-season
EoA and informed EoA Lambda parameter via JAGS}
\usage{
estimateL.EoA.MultiYear(X, beta.params, Lprior = "uniform",
  Lprior.mean = NULL, Lprior.sd = NULL, LMax = 62, conf.level = 0.9)
}
\arguments{
\item{X}{Vector of number of carcasses found, one element per year. If
multiple sites are involved, elements of X are the total (summed) number
of targets found per season.}

\item{beta.params}{A data frame containing, at a minimum, two columns named \code{$alpha}
and \code{$beta}.
These are the annual alpha and beta parameters that determine the overall annual g.
Length of \code{$alpha} and \code{$beta} is either one, in which case g is constant across years,
or one element per year.}

\item{Lprior}{Prior for lambda.  "uniform" uses a uniform[0,LMax] prior for lambda.
"normal" uses a normal(Lprior.mean,Lprior.sd) prior for lambda.}

\item{Lprior.mean}{Mean of lambda prior when Lprior == "normal".}

\item{Lprior.sd}{Standard deviation of normal when Lprior == "normal".}

\item{LMax}{Maximum lambda when Lprior = "uniform".}

\item{conf.level}{Confidence level for the confidence intervals on lambda.}
}
\value{
List containing two components.  \code{$lamda.ests} is a data
frame containing the lambda estiamtes (point est and confidence interval).
In this component \code{$Mtot} is the estimated number of targets over
all seasons.
\code{$out} is the full MCMC chain object.  Use this to check convergence, etc.
}
\description{
This routine computes lambda, the mean number of search targets per season,
from information about the number of targets found and the g-values (=probatility of
discovery) at all
searched sites.  The method is Bayesian and allows either an uniform prior for lambda
or an informed prior.
Estimation is performed using JAGS.
}
\examples{
# Three year study
g <- data.frame(
   alpha = c( 69.9299, 63.5035,  84.6997),
   beta = c(  736.4795,  318.3179, 759.9333 )
   )
X <- c( 0, 1, 3)


eoa <- estimateL.EoA.MultiYear( X, g, LMax=500 )  # Un-informed EoA

ieoa <- estimateL.EoA.MultiYear( X, g, Lprior="normal", Lprior.mean=20, Lprior.sd=4) # Informed EoA


# To check convergence, run traceplot and Gelman stats
plot(ieoa$out) # tracePlot
gelman.diag(ieoa$out) # gelmanStats
gelman.plot(ieoa$out) # gelmanPlot

}
